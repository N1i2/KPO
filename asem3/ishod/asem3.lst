Microsoft (R) Macro Assembler Version 14.37.32822.0	    11/23/23 11:21:33
asem3.asm						     Page 1 - 1


				.586P

				.MODEL FLAT, STDCALL

				ExitProcess PROTO: DWORD

				.STACK 4096

 00000000			.CONST

 00000000			.DATA
 00000000 10 20 30 40		myBytes BYTE 10h, 20h, 30h, 40h
 00000004 008A 003B 0044	myWords WORD 8Ah, 3Bh, 44h, 5Fh, 99h
	   005F 0099
 0000000E 00000001		myDoubles DWORD 1, 2, 3, 4, 5, 6
	   00000002
	   00000003
	   00000004
	   00000005
	   00000006
 00000026 0000000E R		myPointer DWORD myDoubles

 0000002A 02 04 06 07 09	Arr BYTE 2, 4, 6, 7, 9, 1, 5
	   01 05
 00000031 02 04 06 07 09	Arr2 BYTE 2, 4, 6, 7, 9, 1, 0
	   01 00

 00000000			.CODE

 00000000			main PROC
 00000000			START:
 00000000  BE 00000000			mov ESI, 0
 00000005  8B 86 0000000F R		mov EAX, myDoubles[ESI + 1] ;? EAX адрес первого элемента
 0000000B  8B 96 0000000E R		mov EDX, [myDoubles + ESI] ;? EDX сам првый элемент

 00000011  33 C0			xor EAX, EAX

 00000013  02 05 0000002A R		add AL, [Arr]
 00000019  02 05 0000002B R		add AL, [Arr + 1]
 0000001F  02 05 0000002C R		add AL, [Arr + 2]
 00000025  02 05 0000002D R		add AL, [Arr + 3]
 0000002B  02 05 0000002E R		add AL, [Arr + 4]
 00000031  02 05 0000002F R		add AL, [Arr + 5]
 00000037  02 05 00000030 R		add AL, [Arr + 6]

 0000003D  33 C0			xor EAX, EAX
 0000003F  BB 00000001			mov EBX, 1

 00000044			CYCLE:
 00000044  83 F8 07			cmp EAX, 7
 00000047  74 17			je ENDOFCYCLE
					
 00000049  80 B8 00000031 R		cmp [Arr2 + EAX], 0
	   00
 00000050  74 02			je TRUE
 00000052  75 07			jne FALSE

 00000054			TRUE:
 00000054  BB 00000000			mov EBX, 0
 00000059  EB 05			jmp ENDOFCYCLE

 0000005B			FALSE:
 0000005B  83 C0 01			add EAX, 1
 0000005E  E2 E4			loop CYCLE

 00000060			ENDOFCYCLE:


 00000060  6A 00			push 0
 00000062  E8 00000000 E		CALL ExitProcess

 00000067			main ENDP
				end main
Microsoft (R) Macro Assembler Version 14.37.32822.0	    11/23/23 11:21:33
asem3.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

CONST  . . . . . . . . . . . . .	32 Bit	 00000000 Para	  Public  'CONST'	 ReadOnly
FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000038 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000067 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000067 Public STDCALL
  START  . . . . . . . . . . . .	L Near	 00000000 _TEXT	
  CYCLE  . . . . . . . . . . . .	L Near	 00000044 _TEXT	
  TRUE . . . . . . . . . . . . .	L Near	 00000054 _TEXT	
  FALSE  . . . . . . . . . . . .	L Near	 0000005B _TEXT	
  ENDOFCYCLE . . . . . . . . . .	L Near	 00000060 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
Arr2 . . . . . . . . . . . . . .	Byte	 00000031 _DATA	
Arr  . . . . . . . . . . . . . .	Byte	 0000002A _DATA	
myBytes  . . . . . . . . . . . .	Byte	 00000000 _DATA	
myDoubles  . . . . . . . . . . .	DWord	 0000000E _DATA	
myPointer  . . . . . . . . . . .	DWord	 00000026 _DATA	
myWords  . . . . . . . . . . . .	Word	 00000004 _DATA	

	   0 Warnings
	   0 Errors
